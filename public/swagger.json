{
	"swagger": "2.0",
	"info": {
		"description": "Song API reference for developers. SONG is an open source system for validating and tracking metadata about raw data submissions, assigning identifiers to entities of interest, and managing the state of the raw data with regards to publication and access",
		"version": "1.0",
		"title": "Song API"
	},
	"host": "https://song.demo.overture.bio",
	"basePath": "/",
	"tags": [
		{
			"name": "Analysis",
			"description": "Create, Read, Update, publish, unpublish, suppress and search analyses"
		},
		{ "name": "Donor", "description": "Read and delete donors" },
		{ "name": "Export", "description": "Export payloads" },
		{ "name": "File", "description": "Read, Update and delete files" },
		{ "name": "Health", "description": "Check server health" },
		{ "name": "Legacy Entity", "description": "Legacy support for dcc-metadata" },
		{ "name": "Sample", "description": "Read and delete samples" },
		{ "name": "Schema", "description": "Get schemas used for uploads" },
		{ "name": "Specimen", "description": "Read and delete specimens" },
		{ "name": "Study", "description": "Create and read studies" },
		{ "name": "Submit", "description": "Submit and validate json metadata" }
	],
	"paths": {
		"/entities": {
			"get": {
				"tags": ["Legacy Entity"],
				"summary": "FindLegacyEntities",
				"description": "Page through LegacyEntity data",
				"operationId": "findUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{ "name": "access", "in": "query", "required": false, "type": "string" },
					{
						"name": "fields",
						"in": "query",
						"description": "fields",
						"required": false,
						"items": { "type": "object", "additionalProperties": { "type": "string" } }
					},
					{ "name": "fileName", "in": "query", "required": false, "type": "string" },
					{ "name": "gnosId", "in": "query", "required": false, "type": "string" },
					{ "name": "id", "in": "query", "required": false, "type": "string" },
					{
						"name": "offset",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int64"
					},
					{
						"name": "page",
						"in": "query",
						"description": "Results page you want to retrieve (0..N)",
						"required": false,
						"type": "ref"
					},
					{
						"name": "pageNumber",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "pageSize",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{ "name": "paged", "in": "query", "required": false, "type": "boolean" },
					{ "name": "projectCode", "in": "query", "required": false, "type": "string" },
					{
						"name": "size",
						"in": "query",
						"description": "Number of records per page.",
						"required": false,
						"type": "ref"
					},
					{ "name": "sort.sorted", "in": "query", "required": false, "type": "boolean" },
					{ "name": "sort.unsorted", "in": "query", "required": false, "type": "boolean" },
					{ "name": "unpaged", "in": "query", "required": false, "type": "boolean" }
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/JsonNode" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/entities/{id}": {
			"get": {
				"tags": ["Legacy Entity"],
				"summary": "ReadLegacyEntity",
				"description": "Read entity data for a legacy entity id",
				"operationId": "readUsingGET_3",
				"produces": ["*/*"],
				"parameters": [
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" }
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/Legacy" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/export/analysis/{analysisIds}": {
			"get": {
				"tags": ["Export"],
				"summary": "ExportAnalysis",
				"description": "Exports the payload for a list of analysisIds",
				"operationId": "exportAnalysisUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "analysisIds",
						"in": "path",
						"description": "Comma separated list of analysisIds",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": { "type": "array", "items": { "$ref": "#/definitions/ExportedPayload" } }
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/export/studies/{studyId}": {
			"get": {
				"tags": ["Export"],
				"summary": "ExportStudy",
				"description": "Exports all the payloads for a study",
				"operationId": "exportStudyUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": { "type": "array", "items": { "$ref": "#/definitions/ExportedPayload" } }
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/isAlive": {
			"get": {
				"tags": ["Health"],
				"summary": "IsAlive",
				"description": "Checks if the server is running",
				"operationId": "isAliveUsingGET",
				"produces": ["*/*"],
				"responses": {
					"200": { "description": "OK", "schema": { "type": "boolean" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/schemas": {
			"get": {
				"tags": ["Schema"],
				"summary": "ListAnalysisTypes",
				"description": "Retrieves a list of registered analysisTypes",
				"operationId": "listAnalysisTypesUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "hideSchema",
						"in": "query",
						"description": "Hide the schema field from the response",
						"required": false,
						"type": "boolean",
						"default": false,
						"allowEmptyValue": false,
						"x-example": false
					},
					{
						"name": "limit",
						"in": "query",
						"description": "Number of results to retrieve",
						"required": false,
						"type": "ref",
						"default": "20"
					},
					{
						"name": "names",
						"in": "query",
						"description": "Comma separated list of names",
						"required": false,
						"type": "array",
						"items": { "type": "string" },
						"collectionFormat": "multi",
						"allowEmptyValue": false
					},
					{
						"name": "offset",
						"in": "query",
						"description": "Index of first result to retrieve",
						"required": false,
						"type": "ref",
						"default": "0"
					},
					{
						"name": "pageNumber",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{
						"name": "pageSize",
						"in": "query",
						"required": false,
						"type": "integer",
						"format": "int32"
					},
					{ "name": "paged", "in": "query", "required": false, "type": "boolean" },
					{
						"name": "sort",
						"in": "query",
						"description": "Comma separated fields to sort on",
						"required": false,
						"type": "string"
					},
					{ "name": "sort.sorted", "in": "query", "required": false, "type": "boolean" },
					{ "name": "sort.unsorted", "in": "query", "required": false, "type": "boolean" },
					{
						"name": "sortOrder",
						"in": "query",
						"description": "Sorting order: ASC|DESC. Default order: DESC",
						"required": false,
						"type": "string"
					},
					{ "name": "unpaged", "in": "query", "required": false, "type": "boolean" },
					{
						"name": "unrenderedOnly",
						"in": "query",
						"description": "Only retrieve the unrendered schema that was initially registered",
						"required": false,
						"type": "boolean",
						"default": false,
						"allowEmptyValue": false,
						"x-example": false
					},
					{
						"name": "versions",
						"in": "query",
						"description": "Comma separated list of versions",
						"required": false,
						"type": "array",
						"items": { "type": "integer", "format": "int32" },
						"collectionFormat": "multi",
						"allowEmptyValue": false
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": { "$ref": "#/definitions/PageDTO«AnalysisType»" }
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			},
			"post": {
				"tags": ["Schema"],
				"summary": "RegisterAnalysisType",
				"description": "Registers an analysisType schema",
				"operationId": "registerUsingPOST",
				"consumes": ["application/json", "application/json;charset=UTF-8"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"in": "body",
						"name": "request",
						"description": "request",
						"required": true,
						"schema": { "$ref": "#/definitions/RegisterAnalysisTypeRequest" }
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/AnalysisType" } },
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/schemas/registration": {
			"get": {
				"tags": ["Schema"],
				"summary": "GetRegistrationSchema",
				"description": "Retrieves the meta-schema used to validate AnalysisType schemas during registration",
				"operationId": "getAnalysisTypeRegistrationSchemaUsingGET",
				"produces": ["*/*"],
				"responses": {
					"200": { "description": "OK", "schema": { "type": "string" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/schemas/{name}": {
			"get": {
				"tags": ["Schema"],
				"summary": "GetAnalysisTypeVersion",
				"description": "Retrieves the latest version of a schema for an analysisType",
				"operationId": "getAnalysisTypeVersionUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "name",
						"in": "path",
						"description": "The name of an analysisType",
						"required": true,
						"type": "string"
					},
					{
						"name": "unrenderedOnly",
						"in": "query",
						"description": "Only retrieve the unrendered schema that was initially registered",
						"required": false,
						"type": "boolean",
						"default": false,
						"allowEmptyValue": false,
						"x-example": false
					},
					{
						"name": "version",
						"in": "query",
						"description": "Optionally, retrieve a specific version of the analysisType",
						"required": false,
						"type": "integer",
						"format": "int32",
						"allowEmptyValue": false
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/AnalysisType" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/all": {
			"get": {
				"tags": ["Study"],
				"summary": "GetAllStudyIds",
				"description": "Retrieves all studyIds",
				"operationId": "findAllStudiesUsingGET",
				"produces": ["*/*"],
				"responses": {
					"200": {
						"description": "OK",
						"schema": { "type": "array", "items": { "type": "string" } }
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}": {
			"get": {
				"tags": ["Study"],
				"summary": "GetStudy",
				"description": "Retrieves information for a study",
				"operationId": "getStudyUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/Study" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/": {
			"post": {
				"tags": ["Study"],
				"summary": "CreateStudy",
				"description": "Creates a new study",
				"operationId": "saveStudyUsingPOST",
				"consumes": ["application/json", "application/json;charset=UTF-8"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"in": "body",
						"name": "study",
						"description": "study",
						"required": true,
						"schema": { "$ref": "#/definitions/Study" }
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/GenericMessage" } },
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/all": {
			"get": {
				"tags": ["Study"],
				"summary": "GetEntireStudy",
				"description": "Retrieves all donor, specimen and sample data for a study",
				"operationId": "getEntireStudyUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/StudyWithDonors" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis": {
			"get": {
				"tags": ["Analysis"],
				"summary": "GetAnalysesForStudy",
				"description": "Retrieve all analysis objects for a studyId",
				"operationId": "getAnalysisUsingGET_1",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "analysisStates",
						"in": "query",
						"description": "Non-empty comma separated list of analysis states to filter by",
						"required": false,
						"type": "string",
						"default": "PUBLISHED",
						"allowEmptyValue": false
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": { "type": "array", "items": { "$ref": "#/definitions/Analysis" } }
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis/paginated": {
			"get": {
				"tags": ["Analysis"],
				"summary": "GetAnalysesForStudy",
				"description": "Retrieve paginated analysis objects for a studyId. analysisState is optional, default to PUBLISHED, offset is required, default to 0, limit is required, default to 100. Results are sorted by analysis id in ASC order.",
				"operationId": "getAnalysisUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "analysisStates",
						"in": "query",
						"description": "Non-empty comma separated list of analysis states to filter by",
						"required": false,
						"type": "string",
						"default": "PUBLISHED",
						"allowEmptyValue": false
					},
					{
						"name": "limit",
						"in": "query",
						"description": "limit",
						"required": false,
						"type": "integer",
						"default": 100,
						"format": "int32"
					},
					{
						"name": "offset",
						"in": "query",
						"description": "offset",
						"required": false,
						"type": "integer",
						"default": 0,
						"format": "int32"
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/GetAnalysisResponse" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis/publish/{id}": {
			"put": {
				"tags": ["Analysis"],
				"summary": "PublishAnalysis",
				"description": "Publish an analysis. This checks to see if the files associated with the input analysisId exist in the storage server",
				"operationId": "publishAnalysisUsingPUT",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "ignoreUndefinedMd5",
						"in": "query",
						"description": "Ignores files that have an undefined MD5 checksum when publishing",
						"required": false,
						"type": "boolean",
						"default": false,
						"allowEmptyValue": false,
						"x-example": false
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/GenericMessage" } },
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis/search/id": {
			"get": {
				"tags": ["Analysis"],
				"summary": "IdSearch",
				"description": "Search for analysis objects by specifying regex patterns for the donorIds, sampleIds, specimenIds, or fileIds request parameters",
				"operationId": "idSearchUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "donorId",
						"in": "query",
						"description": "donorId",
						"required": false,
						"type": "string"
					},
					{
						"name": "fileId",
						"in": "query",
						"description": "fileId",
						"required": false,
						"type": "string"
					},
					{
						"name": "sampleId",
						"in": "query",
						"description": "sampleId",
						"required": false,
						"type": "string"
					},
					{
						"name": "specimenId",
						"in": "query",
						"description": "specimenId",
						"required": false,
						"type": "string"
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					},
					{
						"name": "submitterDonorId",
						"in": "query",
						"description": "submitterDonorId",
						"required": false,
						"type": "string"
					},
					{
						"name": "submitterSampleId",
						"in": "query",
						"description": "submitterSampleId",
						"required": false,
						"type": "string"
					},
					{
						"name": "submitterSpecimenId",
						"in": "query",
						"description": "submitterSpecimenId",
						"required": false,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": { "type": "array", "items": { "$ref": "#/definitions/Analysis" } }
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			},
			"post": {
				"tags": ["Analysis"],
				"summary": "IdSearch",
				"description": "Search for analysis objects by specifying an IdSearchRequest",
				"operationId": "idSearchUsingPOST",
				"consumes": ["application/json", "application/json;charset=UTF-8"],
				"produces": ["*/*"],
				"parameters": [
					{
						"in": "body",
						"name": "request",
						"description": "request",
						"required": true,
						"schema": { "$ref": "#/definitions/IdSearchRequest" }
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": { "type": "array", "items": { "$ref": "#/definitions/Analysis" } }
					},
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis/suppress/{id}": {
			"put": {
				"tags": ["Analysis"],
				"summary": "SuppressAnalysis",
				"description": "Suppress an analysis. Used if a previously published analysis is no longer needed. Instead of removing the analysis, it is marked as \"suppressed\"",
				"operationId": "suppressAnalysisUsingPUT",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/GenericMessage" } },
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis/unpublish/{id}": {
			"put": {
				"tags": ["Analysis"],
				"summary": "UnpublishAnalysis",
				"description": "Unpublish an analysis. Set the analysis status to unpublished",
				"operationId": "unpublishAnalysisUsingPUT",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/GenericMessage" } },
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis/{analysisId}": {
			"put": {
				"tags": ["Analysis"],
				"summary": "UpdateAnalysis",
				"description": "Update dynamic-data for for an analysis",
				"operationId": "updateAnalysisUsingPUT",
				"consumes": ["application/json", "application/json;charset=UTF-8"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "analysisId",
						"in": "path",
						"description": "analysisId",
						"required": true,
						"type": "string"
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "updateAnalysisRequest",
						"description": "updateAnalysisRequest",
						"required": true,
						"schema": { "$ref": "#/definitions/JsonNode" }
					}
				],
				"responses": {
					"200": { "description": "OK" },
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			},
			"patch": {
				"tags": ["Analysis"],
				"summary": "PatchUpdateAnalysis",
				"description": "Partial Update dynamic-data for for an analysis",
				"operationId": "patchUpdateAnalysisUsingPATCH",
				"consumes": ["application/json", "application/json;charset=UTF-8"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "analysisId",
						"in": "path",
						"description": "analysisId",
						"required": true,
						"type": "string"
					},
					{
						"in": "body",
						"name": "patchUpdateAnalysisRequest",
						"description": "patchUpdateAnalysisRequest",
						"required": true,
						"schema": { "$ref": "#/definitions/JsonNode" }
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK" },
					"204": { "description": "No Content" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis/{id}": {
			"get": {
				"tags": ["Analysis"],
				"summary": "ReadAnalysis",
				"description": "Retrieve the analysis object for an analysisId",
				"operationId": "readUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/Analysis" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/analysis/{id}/files": {
			"get": {
				"tags": ["Analysis"],
				"summary": "ReadAnalysisFiles",
				"description": "Retrieve the file objects for an analysisId",
				"operationId": "getFilesByIdUsingGET",
				"produces": ["*/*"],
				"parameters": [
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": {
						"description": "OK",
						"schema": { "type": "array", "items": { "$ref": "#/definitions/FileEntity" } }
					},
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/donors/{ids}": {
			"delete": {
				"tags": ["Donor"],
				"summary": "DeleteDonors",
				"description": "Deletes donor data and all dependent specimens and samples for donorIds",
				"operationId": "deleteUsingDELETE",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "Comma separated list of donorIds",
						"required": true,
						"type": "string"
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "type": "string" } },
					"204": { "description": "No Content" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/donors/{id}": {
			"get": {
				"tags": ["Donor"],
				"summary": "ReadDonor",
				"description": "Retrieves donor data for a donorId",
				"operationId": "readUsingGET_1",
				"produces": ["*/*"],
				"parameters": [
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/Donor" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/files/{ids}": {
			"delete": {
				"tags": ["File"],
				"summary": "DeleteFiles",
				"description": "Deletes file data for fileIds",
				"operationId": "deleteUsingDELETE_1",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "Comma separated list of fileIds",
						"required": true,
						"type": "string"
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "type": "string" } },
					"204": { "description": "No Content" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/files/{id}": {
			"get": {
				"tags": ["File"],
				"summary": "ReadFile",
				"description": "Retrieves file data for a fileId",
				"operationId": "readUsingGET_2",
				"produces": ["*/*"],
				"parameters": [
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/FileEntity" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			},
			"put": {
				"tags": ["File"],
				"summary": "UpdateFile",
				"description": "Updates file data for a fileId",
				"operationId": "updateUsingPUT",
				"consumes": ["application/json"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"in": "body",
						"name": "fileUpdateRequest",
						"description": "File data to update",
						"required": true,
						"schema": { "$ref": "#/definitions/FileUpdateRequest" }
					},
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/FileUpdateResponse" } },
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/samples/{ids}": {
			"delete": {
				"tags": ["Sample"],
				"summary": "DeleteSamples",
				"description": "Deletes sample data for sampleIds",
				"operationId": "deleteUsingDELETE_2",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "Comma separated list of sampleIds",
						"required": true,
						"type": "string"
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "type": "string" } },
					"204": { "description": "No Content" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/samples/{id}": {
			"get": {
				"tags": ["Sample"],
				"summary": "ReadSample",
				"description": "Retrieves sample data for a sampleId",
				"operationId": "readUsingGET_4",
				"produces": ["*/*"],
				"parameters": [
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/Sample" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/specimens/{ids}": {
			"delete": {
				"tags": ["Specimen"],
				"summary": "DeleteSpecimens",
				"description": "Deletes specimen data and all dependent samples for specimenIds",
				"operationId": "deleteUsingDELETE_3",
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "ids",
						"in": "path",
						"description": "Comma separated list of specimenIds",
						"required": true,
						"type": "string"
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "type": "string" } },
					"204": { "description": "No Content" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" }
				},
				"deprecated": false
			}
		},
		"/studies/{studyId}/specimens/{id}": {
			"get": {
				"tags": ["Specimen"],
				"summary": "ReadSpecimen",
				"description": "Retrieves specimen data for a specimenId",
				"operationId": "readUsingGET_5",
				"produces": ["*/*"],
				"parameters": [
					{ "name": "id", "in": "path", "description": "id", "required": true, "type": "string" },
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/Specimen" } },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		},
		"/submit/{studyId}": {
			"post": {
				"tags": ["Submit"],
				"summary": "Submit",
				"description": "Synchronously submit a json payload",
				"operationId": "submitUsingPOST",
				"consumes": ["application/json", "application/json;charset=UTF-8"],
				"produces": ["*/*"],
				"parameters": [
					{
						"name": "Authorization",
						"in": "header",
						"description": "Authorization",
						"required": false,
						"type": "string"
					},
					{
						"name": "allowDuplicates",
						"in": "query",
						"description": "allowDuplicates",
						"required": false,
						"type": "boolean",
						"default": false
					},
					{
						"in": "body",
						"name": "json_payload",
						"description": "json_payload",
						"required": true,
						"schema": { "type": "string" }
					},
					{
						"name": "studyId",
						"in": "path",
						"description": "studyId",
						"required": true,
						"type": "string"
					}
				],
				"responses": {
					"200": { "description": "OK", "schema": { "$ref": "#/definitions/SubmitResponse" } },
					"201": { "description": "Created" },
					"401": { "description": "Unauthorized" },
					"403": { "description": "Forbidden" },
					"404": { "description": "Not Found" }
				},
				"deprecated": false
			}
		}
	},
	"definitions": {
		"Analysis": {
			"type": "object",
			"properties": {
				"analysisId": { "type": "string" },
				"analysisState": { "type": "string" },
				"analysisStateHistory": {
					"type": "array",
					"items": { "$ref": "#/definitions/AnalysisStateChange" }
				},
				"analysisType": { "$ref": "#/definitions/AnalysisTypeId" },
				"createdAt": { "type": "string", "format": "date-time" },
				"files": { "type": "array", "items": { "$ref": "#/definitions/FileEntity" } },
				"firstPublishedAt": { "type": "string", "format": "date-time" },
				"publishedAt": { "type": "string", "format": "date-time" },
				"samples": { "type": "array", "items": { "$ref": "#/definitions/CompositeEntity" } },
				"studyId": { "type": "string" },
				"updatedAt": { "type": "string", "format": "date-time" }
			},
			"title": "Analysis"
		},
		"AnalysisStateChange": {
			"type": "object",
			"properties": {
				"initialState": { "type": "string" },
				"updatedAt": { "type": "string", "format": "date-time" },
				"updatedState": { "type": "string" }
			},
			"title": "AnalysisStateChange"
		},
		"AnalysisType": {
			"type": "object",
			"properties": {
				"createdAt": { "type": "string", "format": "date-time" },
				"name": { "type": "string" },
				"schema": { "$ref": "#/definitions/JsonNode" },
				"version": { "type": "integer", "format": "int32" }
			},
			"title": "AnalysisType"
		},
		"AnalysisTypeId": {
			"type": "object",
			"properties": {
				"name": { "type": "string" },
				"version": { "type": "integer", "format": "int32" }
			},
			"title": "AnalysisTypeId"
		},
		"CompositeEntity": {
			"type": "object",
			"properties": {
				"donor": { "$ref": "#/definitions/Donor" },
				"info": { "$ref": "#/definitions/JsonNode" },
				"matchedNormalSubmitterSampleId": { "type": "string" },
				"sampleId": { "type": "string" },
				"sampleType": { "type": "string" },
				"specimen": { "$ref": "#/definitions/Specimen" },
				"specimenId": { "type": "string" },
				"submitterSampleId": { "type": "string" }
			},
			"title": "CompositeEntity"
		},
		"Donor": {
			"type": "object",
			"properties": {
				"donorId": { "type": "string" },
				"gender": { "type": "string" },
				"info": { "$ref": "#/definitions/JsonNode" },
				"studyId": { "type": "string" },
				"submitterDonorId": { "type": "string" }
			},
			"title": "Donor"
		},
		"DonorWithSpecimens": {
			"type": "object",
			"properties": {
				"donorId": { "type": "string" },
				"gender": { "type": "string" },
				"info": { "$ref": "#/definitions/JsonNode" },
				"specimens": { "type": "array", "items": { "$ref": "#/definitions/SpecimenWithSamples" } },
				"studyId": { "type": "string" },
				"submitterDonorId": { "type": "string" }
			},
			"title": "DonorWithSpecimens"
		},
		"ExportedPayload": {
			"type": "object",
			"properties": {
				"payloads": { "type": "array", "items": { "$ref": "#/definitions/JsonNode" } },
				"studyId": { "type": "string" }
			},
			"title": "ExportedPayload"
		},
		"FileDTO": {
			"type": "object",
			"properties": {
				"analysisId": { "type": "string" },
				"dataType": { "type": "string" },
				"fileAccess": { "type": "string" },
				"fileMd5sum": { "type": "string" },
				"fileName": { "type": "string" },
				"fileSize": { "type": "integer", "format": "int64" },
				"fileType": { "type": "string" },
				"info": { "$ref": "#/definitions/JsonNode" },
				"objectId": { "type": "string" },
				"studyId": { "type": "string" }
			},
			"title": "FileDTO"
		},
		"FileEntity": {
			"type": "object",
			"properties": {
				"analysisId": { "type": "string" },
				"dataType": { "type": "string" },
				"fileAccess": { "type": "string" },
				"fileMd5sum": { "type": "string" },
				"fileName": { "type": "string" },
				"fileSize": { "type": "integer", "format": "int64" },
				"fileType": { "type": "string" },
				"info": { "$ref": "#/definitions/JsonNode" },
				"objectId": { "type": "string" },
				"studyId": { "type": "string" }
			},
			"title": "FileEntity"
		},
		"FileUpdateRequest": {
			"type": "object",
			"properties": {
				"dataType": { "type": "string" },
				"fileAccess": { "type": "string" },
				"fileMd5sum": { "type": "string" },
				"fileSize": { "type": "integer", "format": "int64" },
				"info": { "$ref": "#/definitions/JsonNode" }
			},
			"title": "FileUpdateRequest"
		},
		"FileUpdateResponse": {
			"type": "object",
			"properties": {
				"fileUpdateType": {
					"type": "string",
					"enum": ["NO_UPDATE", "CONTENT_UPDATE", "METADATA_UPDATE"]
				},
				"message": { "type": "string" },
				"originalAnalysisState": {
					"type": "string",
					"enum": ["PUBLISHED", "UNPUBLISHED", "SUPPRESSED"]
				},
				"originalFile": { "$ref": "#/definitions/FileDTO" },
				"unpublishedAnalysis": { "type": "boolean" }
			},
			"title": "FileUpdateResponse"
		},
		"GenericMessage": {
			"type": "object",
			"properties": { "message": { "type": "string" } },
			"title": "GenericMessage"
		},
		"GetAnalysisResponse": {
			"type": "object",
			"properties": {
				"analyses": { "type": "array", "items": { "$ref": "#/definitions/Analysis" } },
				"currentTotalAnalyses": { "type": "integer", "format": "int32" },
				"totalAnalyses": { "type": "integer", "format": "int32" }
			},
			"title": "GetAnalysisResponse"
		},
		"IdSearchRequest": {
			"type": "object",
			"properties": {
				"donorId": { "type": "string", "description": "regex pattern. Default is wildcard" },
				"objectId": { "type": "string", "description": "regex pattern. Default is wildcard" },
				"sampleId": { "type": "string", "description": "regex pattern. Default is wildcard" },
				"specimenId": { "type": "string", "description": "regex pattern. Default is wildcard" },
				"submitterDonorIds": {
					"type": "string",
					"description": "regex pattern. Default is wildcard"
				},
				"submitterSampleId": {
					"type": "string",
					"description": "regex pattern. Default is wildcard"
				},
				"submitterSpecimenIds": {
					"type": "string",
					"description": "regex pattern. Default is wildcard"
				}
			},
			"title": "IdSearchRequest"
		},
		"JsonNode": { "type": "object", "title": "JsonNode" },
		"Legacy": {
			"type": "object",
			"properties": {
				"access": { "type": "string" },
				"fileName": { "type": "string" },
				"gnosId": { "type": "string" },
				"id": { "type": "string" },
				"projectCode": { "type": "string" }
			},
			"title": "Legacy"
		},
		"PageDTO«AnalysisType»": {
			"type": "object",
			"properties": {
				"count": { "type": "integer", "format": "int64" },
				"limit": { "type": "integer", "format": "int32" },
				"offset": { "type": "integer", "format": "int32" },
				"resultSet": { "type": "array", "items": { "$ref": "#/definitions/AnalysisType" } }
			},
			"title": "PageDTO«AnalysisType»"
		},
		"RegisterAnalysisTypeRequest": {
			"type": "object",
			"properties": {
				"name": { "type": "string" },
				"schema": { "$ref": "#/definitions/JsonNode" }
			},
			"title": "RegisterAnalysisTypeRequest"
		},
		"Sample": {
			"type": "object",
			"properties": {
				"info": { "$ref": "#/definitions/JsonNode" },
				"matchedNormalSubmitterSampleId": { "type": "string" },
				"sampleId": { "type": "string" },
				"sampleType": { "type": "string" },
				"specimenId": { "type": "string" },
				"submitterSampleId": { "type": "string" }
			},
			"title": "Sample"
		},
		"Specimen": {
			"type": "object",
			"properties": {
				"donorId": { "type": "string" },
				"info": { "$ref": "#/definitions/JsonNode" },
				"specimenId": { "type": "string" },
				"specimenTissueSource": { "type": "string" },
				"specimenType": { "type": "string" },
				"submitterSpecimenId": { "type": "string" },
				"tumourNormalDesignation": { "type": "string" }
			},
			"title": "Specimen"
		},
		"SpecimenWithSamples": {
			"type": "object",
			"properties": {
				"donorId": { "type": "string" },
				"info": { "$ref": "#/definitions/JsonNode" },
				"samples": { "type": "array", "items": { "$ref": "#/definitions/Sample" } },
				"specimen": { "$ref": "#/definitions/Specimen" },
				"specimenId": { "type": "string" },
				"specimenTissueSource": { "type": "string" },
				"specimenType": { "type": "string" },
				"submitterSpecimenId": { "type": "string" },
				"tumourNormalDesignation": { "type": "string" }
			},
			"title": "SpecimenWithSamples"
		},
		"Study": {
			"type": "object",
			"properties": {
				"description": { "type": "string" },
				"info": { "$ref": "#/definitions/JsonNode" },
				"name": { "type": "string" },
				"organization": { "type": "string" },
				"studyId": { "type": "string" }
			},
			"title": "Study"
		},
		"StudyWithDonors": {
			"type": "object",
			"properties": {
				"description": { "type": "string" },
				"donors": { "type": "array", "items": { "$ref": "#/definitions/DonorWithSpecimens" } },
				"info": { "$ref": "#/definitions/JsonNode" },
				"name": { "type": "string" },
				"organization": { "type": "string" },
				"studyId": { "type": "string" }
			},
			"title": "StudyWithDonors"
		},
		"SubmitResponse": {
			"type": "object",
			"properties": { "analysisId": { "type": "string" }, "status": { "type": "string" } },
			"title": "SubmitResponse"
		}
	}
}
